import { from } from 'rxjs';
import { map,filter, reduce, mergeMap } from 'rxjs/operators';
 
let persons = [
    { id: 1, name: "Jan Kowalski" },
    { id: 2, name: "John Doe" },
    { id: 3, name: "Jarek Kaczka" }
];

let ages = [
    { person: 1, age: 18 },
    { person: 2, age: 24 },
    { person: 3, age: 666 }
];

let locations = [
    { person: 1, country: "Poland" },
    { person: 3, country: "Poland" },
    { person: 1, country: "USA" }
];

const calculateAge = () => {
    return from(locations).pipe(
        filter(location => location.country==="Poland"),
        mergeMap(location => {
            const personAge = ages.find(age=>age.person=== location.person);
            return personAge ?{ ...personAge, country: location.country } : null

        }),
        filter( Boolean ),
        reduce( (acc, curr) => {
            acc.totalAge+= curr.age;
            acc.count += 1;
            return acc 
        }, {totalAge: 0,count:0}),
        map( result=>(result.count> 0 ? result.totalAge/result.count:0)); 
};

calculateAge().subscribe({
    next: avgAge =>console.log('Średni wiek w polsce: ${avgAge}'),
    error: err => console.log("wystąpił błąd:",err),
    complate: ()=> console.log("Obliczanie skończone")


})